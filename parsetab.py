
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftNOTleftLTGTLEGEEQNErightCONSleftINleftPLUSMINUSleftTIMESDIVIDEDIVMODrightUMINUSrightPOWERleftLBRACKETRBRACKETleftPOUNDleftLPARENRPARENleftIFWHILEELSEleftLCURLYRCURLYAND COMMA CONS DIV DIVIDE ELSE EQ EQUALS FALSE GE GT IF IN LBRACKET LCURLY LE LPAREN LT MINUS MOD NE NOT NUMBER OR PLUS POUND POWER PRINT RBRACKET RCURLY RPAREN SEMI STRING TIMES TRUE VAR WHILE\n     block : LCURLY statement_list RCURLY\n    \n     statement_list : statement_list statement\n    \n    statement_list : statement\n    statement : expression SEMIstatement : IF LPAREN expression RPAREN blockstatement : IF LPAREN expression RPAREN block ELSE blockstatement : WHILE LPAREN expression RPAREN blockstatement : expression EQUALS expression SEMIexpression : VAR\n    statement : PRINT LPAREN expression RPAREN SEMI\n    expression : LPAREN expression RPARENexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression DIV expression\n                  | expression MOD expression\n                  | expression POWER expressionexpression : MINUS expression %prec UMINUSexpression : factorexpression : termterm : NUMBERexpression : factor PLUS expressionfactor : STRINGexpression : factor LBRACKET NUMBER RBRACKETexpression : expression IN expressionexpression : expression LT expression\n                  | expression LE expression\n                  | expression GT expression\n                  | expression GE expression\n                  | expression EQ expression\n                  | expression NE expressionexpression : booleanboolean : TRUEboolean : FALSEexpression : expression OR expression\n                  | expression AND expressionexpression : NOT expressionexpression : tupletuple : LPAREN in_tuple RPARENexpression : LPAREN RPARENin_tuple : in_tuple COMMA expressionin_tuple : expression COMMA expressionexpression : POUND expression tupleexpression : listlist : LBRACKET in_list RBRACKETexpression : LBRACKET RBRACKETin_list : expressionin_list : in_list COMMA expressionexpression : expression PLUS listindex : LBRACKET expression RBRACKETlist : expression indexexpression : expression CONS listexpression : expression IN list'
    
_lr_action_items = {'LCURLY':([0,99,102,110,],[2,2,2,2,]),'$end':([1,24,],[0,-1,]),'IF':([2,3,4,24,25,26,97,107,108,109,111,],[6,6,-3,-1,-2,-4,-8,-5,-7,-10,-6,]),'WHILE':([2,3,4,24,25,26,97,107,108,109,111,],[8,8,-3,-1,-2,-4,-8,-5,-7,-10,-6,]),'PRINT':([2,3,4,24,25,26,97,107,108,109,111,],[9,9,-3,-1,-2,-4,-8,-5,-7,-10,-6,]),'VAR':([2,3,4,7,11,14,17,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,54,82,86,88,94,96,97,107,108,109,111,],[10,10,-3,10,10,10,10,10,-1,-2,-4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-8,-5,-7,-10,-6,]),'LPAREN':([2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,51,52,53,54,56,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,85,86,87,88,91,93,94,95,96,97,98,104,107,108,109,111,],[7,7,-3,47,7,51,52,-9,7,-20,-21,7,-22,-33,7,-39,7,-45,-24,-34,-35,-1,-2,-4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-52,7,7,-41,7,7,-19,7,-47,-38,96,-12,-45,-13,-14,-15,-16,-17,-18,-26,-45,-27,-28,-29,-30,-31,-32,-36,-37,-53,7,-11,7,-40,7,-23,-46,7,-44,7,-8,-51,-25,-5,-7,-10,-6,]),'MINUS':([2,3,4,5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,100,101,104,105,106,107,108,109,111,],[11,11,-3,29,11,-9,11,-20,-21,11,-22,-33,11,-39,11,-45,-24,-34,-35,-1,-2,-4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-52,11,11,29,-41,11,11,-19,11,-47,29,29,29,29,-12,-45,-13,-14,-15,-16,-17,-18,29,-45,29,29,29,29,29,29,29,29,29,-45,11,29,29,-11,11,-40,11,29,29,-23,-46,11,-44,11,-8,-51,29,29,-25,29,29,-5,-7,-10,-6,]),'NOT':([2,3,4,7,11,14,17,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,54,82,86,88,94,96,97,107,108,109,111,],[17,17,-3,17,17,17,17,17,-1,-2,-4,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-8,-5,-7,-10,-6,]),'POUND':([2,3,4,7,11,14,17,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,54,82,86,88,94,96,97,107,108,109,111,],[19,19,-3,19,19,19,19,19,-1,-2,-4,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-8,-5,-7,-10,-6,]),'LBRACKET':([2,3,4,5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,100,101,104,105,106,107,108,109,111,],[14,14,-3,46,14,-9,14,55,-21,14,-22,-33,14,-39,14,-45,-24,-34,-35,-1,-2,-4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,82,-52,14,14,46,-41,14,14,46,14,-47,46,46,46,46,46,-45,46,46,46,46,46,46,46,-45,46,46,46,46,46,46,46,46,46,-45,14,46,46,-11,14,-40,14,46,46,46,-46,14,-44,14,-8,-51,46,46,-25,46,46,-5,-7,-10,-6,]),'STRING':([2,3,4,7,11,14,17,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,54,82,86,88,94,96,97,107,108,109,111,],[21,21,-3,21,21,21,21,21,-1,-2,-4,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-8,-5,-7,-10,-6,]),'NUMBER':([2,3,4,7,11,14,17,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,54,55,82,86,88,94,96,97,107,108,109,111,],[15,15,-3,15,15,15,15,15,-1,-2,-4,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,92,15,15,15,15,15,-8,-5,-7,-10,-6,]),'TRUE':([2,3,4,7,11,14,17,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,54,82,86,88,94,96,97,107,108,109,111,],[22,22,-3,22,22,22,22,22,-1,-2,-4,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-8,-5,-7,-10,-6,]),'FALSE':([2,3,4,7,11,14,17,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,54,82,86,88,94,96,97,107,108,109,111,],[23,23,-3,23,23,23,23,23,-1,-2,-4,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-8,-5,-7,-10,-6,]),'RCURLY':([3,4,24,25,26,97,107,108,109,111,],[24,-3,-1,-2,-4,-8,-5,-7,-10,-6,]),'SEMI':([5,10,12,13,15,16,18,20,21,22,23,45,49,53,56,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,85,87,91,93,95,98,103,104,],[26,-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,-41,-19,-47,-38,97,-12,-45,-13,-14,-15,-16,-17,-18,-26,-45,-27,-28,-29,-30,-31,-32,-36,-37,-53,-11,-40,-23,-46,-44,-51,109,-25,]),'EQUALS':([5,10,12,13,15,16,18,20,21,22,23,45,49,53,56,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,85,87,91,93,95,98,104,],[27,-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,-41,-19,-47,-38,-12,-45,-13,-14,-15,-16,-17,-18,-26,-45,-27,-28,-29,-30,-31,-32,-36,-37,-53,-11,-40,-23,-46,-44,-51,-25,]),'PLUS':([5,10,12,13,15,16,18,20,21,22,23,45,48,49,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,89,90,91,93,95,98,100,101,104,105,106,],[28,-9,54,-21,-22,-33,-39,-45,-24,-34,-35,-52,28,-41,-19,-47,28,28,28,28,-12,-45,-13,-14,-15,-16,-17,-18,28,-45,28,28,28,28,28,28,28,28,28,-45,28,28,-11,-40,28,28,-23,-46,-44,-51,28,28,-25,28,28,]),'TIMES':([5,10,12,13,15,16,18,20,21,22,23,45,48,49,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,89,90,91,93,95,98,100,101,104,105,106,],[30,-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,30,-41,-19,-47,30,30,30,30,30,-45,30,-14,-15,-16,-17,-18,30,-45,30,30,30,30,30,30,30,30,30,-45,30,30,-11,-40,30,30,30,-46,-44,-51,30,30,-25,30,30,]),'DIVIDE':([5,10,12,13,15,16,18,20,21,22,23,45,48,49,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,89,90,91,93,95,98,100,101,104,105,106,],[31,-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,31,-41,-19,-47,31,31,31,31,31,-45,31,-14,-15,-16,-17,-18,31,-45,31,31,31,31,31,31,31,31,31,-45,31,31,-11,-40,31,31,31,-46,-44,-51,31,31,-25,31,31,]),'DIV':([5,10,12,13,15,16,18,20,21,22,23,45,48,49,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,89,90,91,93,95,98,100,101,104,105,106,],[32,-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,32,-41,-19,-47,32,32,32,32,32,-45,32,-14,-15,-16,-17,-18,32,-45,32,32,32,32,32,32,32,32,32,-45,32,32,-11,-40,32,32,32,-46,-44,-51,32,32,-25,32,32,]),'MOD':([5,10,12,13,15,16,18,20,21,22,23,45,48,49,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,89,90,91,93,95,98,100,101,104,105,106,],[33,-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,33,-41,-19,-47,33,33,33,33,33,-45,33,-14,-15,-16,-17,-18,33,-45,33,33,33,33,33,33,33,33,33,-45,33,33,-11,-40,33,33,33,-46,-44,-51,33,33,-25,33,33,]),'POWER':([5,10,12,13,15,16,18,20,21,22,23,45,48,49,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,89,90,91,93,95,98,100,101,104,105,106,],[34,-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,34,-41,34,-47,34,34,34,34,34,-45,34,34,34,34,34,34,34,-45,34,34,34,34,34,34,34,34,34,-45,34,34,-11,-40,34,34,34,-46,-44,-51,34,34,-25,34,34,]),'IN':([5,10,12,13,15,16,18,20,21,22,23,45,48,49,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,89,90,91,93,95,98,100,101,104,105,106,],[35,-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,35,-41,-19,-47,35,35,35,35,-12,-45,-13,-14,-15,-16,-17,-18,-26,-45,35,35,35,35,35,35,35,35,35,-45,35,35,-11,-40,35,35,-23,-46,-44,-51,35,35,-25,35,35,]),'LT':([5,10,12,13,15,16,18,20,21,22,23,45,48,49,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,89,90,91,93,95,98,100,101,104,105,106,],[36,-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,36,-41,-19,-47,36,36,36,36,-12,-45,-13,-14,-15,-16,-17,-18,-26,-45,-27,-28,-29,-30,-31,-32,36,36,36,-45,36,36,-11,-40,36,36,-23,-46,-44,-51,36,36,-25,36,36,]),'LE':([5,10,12,13,15,16,18,20,21,22,23,45,48,49,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,89,90,91,93,95,98,100,101,104,105,106,],[37,-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,37,-41,-19,-47,37,37,37,37,-12,-45,-13,-14,-15,-16,-17,-18,-26,-45,-27,-28,-29,-30,-31,-32,37,37,37,-45,37,37,-11,-40,37,37,-23,-46,-44,-51,37,37,-25,37,37,]),'GT':([5,10,12,13,15,16,18,20,21,22,23,45,48,49,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,89,90,91,93,95,98,100,101,104,105,106,],[38,-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,38,-41,-19,-47,38,38,38,38,-12,-45,-13,-14,-15,-16,-17,-18,-26,-45,-27,-28,-29,-30,-31,-32,38,38,38,-45,38,38,-11,-40,38,38,-23,-46,-44,-51,38,38,-25,38,38,]),'GE':([5,10,12,13,15,16,18,20,21,22,23,45,48,49,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,89,90,91,93,95,98,100,101,104,105,106,],[39,-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,39,-41,-19,-47,39,39,39,39,-12,-45,-13,-14,-15,-16,-17,-18,-26,-45,-27,-28,-29,-30,-31,-32,39,39,39,-45,39,39,-11,-40,39,39,-23,-46,-44,-51,39,39,-25,39,39,]),'EQ':([5,10,12,13,15,16,18,20,21,22,23,45,48,49,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,89,90,91,93,95,98,100,101,104,105,106,],[40,-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,40,-41,-19,-47,40,40,40,40,-12,-45,-13,-14,-15,-16,-17,-18,-26,-45,-27,-28,-29,-30,-31,-32,40,40,40,-45,40,40,-11,-40,40,40,-23,-46,-44,-51,40,40,-25,40,40,]),'NE':([5,10,12,13,15,16,18,20,21,22,23,45,48,49,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,89,90,91,93,95,98,100,101,104,105,106,],[41,-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,41,-41,-19,-47,41,41,41,41,-12,-45,-13,-14,-15,-16,-17,-18,-26,-45,-27,-28,-29,-30,-31,-32,41,41,41,-45,41,41,-11,-40,41,41,-23,-46,-44,-51,41,41,-25,41,41,]),'OR':([5,10,12,13,15,16,18,20,21,22,23,45,48,49,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,89,90,91,93,95,98,100,101,104,105,106,],[42,-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,42,-41,-19,-47,42,-38,42,42,-12,-45,-13,-14,-15,-16,-17,-18,-26,-45,-27,-28,-29,-30,-31,-32,-36,-37,42,-45,42,42,-11,-40,42,42,-23,-46,-44,-51,42,42,-25,42,42,]),'AND':([5,10,12,13,15,16,18,20,21,22,23,45,48,49,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,89,90,91,93,95,98,100,101,104,105,106,],[43,-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,43,-41,-19,-47,43,-38,43,43,-12,-45,-13,-14,-15,-16,-17,-18,-26,-45,-27,-28,-29,-30,-31,-32,43,-37,43,-45,43,43,-11,-40,43,43,-23,-46,-44,-51,43,43,-25,43,43,]),'CONS':([5,10,12,13,15,16,18,20,21,22,23,45,48,49,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,89,90,91,93,95,98,100,101,104,105,106,],[44,-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,44,-41,-19,-47,44,44,44,44,-12,-45,-13,-14,-15,-16,-17,-18,-26,-45,44,44,44,44,44,44,44,44,44,-45,44,44,-11,-40,44,44,-23,-46,-44,-51,44,44,-25,44,44,]),'RPAREN':([7,10,12,13,15,16,18,20,21,22,23,45,48,49,50,53,56,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,84,85,87,89,90,91,93,95,98,100,101,104,],[49,-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,85,-41,87,-19,-47,-38,-12,-45,-13,-14,-15,-16,-17,-18,-26,-45,-27,-28,-29,-30,-31,-32,-36,-37,-53,99,-11,-40,102,103,-23,-46,-44,-51,-43,-42,-25,]),'COMMA':([10,12,13,15,16,18,20,21,22,23,45,48,49,50,53,56,57,58,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,85,87,91,93,95,98,100,101,104,105,106,],[-9,-20,-21,-22,-33,-39,-45,-24,-34,-35,-52,86,-41,88,-19,-47,94,-48,-38,-12,-45,-13,-14,-15,-16,-17,-18,-26,-45,-27,-28,-29,-30,-31,-32,-36,-37,-53,-11,-40,-23,-46,-44,-51,-43,-42,-25,-49,86,]),'RBRACKET':([10,12,13,14,15,16,18,20,21,22,23,45,49,53,56,57,58,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,87,91,92,93,95,98,104,105,],[-9,-20,-21,56,-22,-33,-39,-45,-24,-34,-35,-52,-41,-19,-47,93,-48,-38,-12,-45,-13,-14,-15,-16,-17,-18,-26,-45,-27,-28,-29,-30,-31,-32,-36,-37,-53,56,98,-11,-40,-23,104,-46,-44,-51,-25,-49,]),'ELSE':([24,107,],[-1,110,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'block':([0,99,102,110,],[1,107,108,111,]),'statement_list':([2,],[3,]),'statement':([2,3,],[4,25,]),'expression':([2,3,7,11,14,17,19,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,54,82,86,88,94,96,],[5,5,48,53,58,59,60,61,62,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,83,84,89,90,91,58,100,101,105,106,]),'factor':([2,3,7,11,14,17,19,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,54,82,86,88,94,96,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'term':([2,3,7,11,14,17,19,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,54,82,86,88,94,96,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'boolean':([2,3,7,11,14,17,19,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,54,82,86,88,94,96,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'tuple':([2,3,7,11,14,17,19,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,54,60,82,86,88,94,96,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,95,18,18,18,18,18,]),'list':([2,3,7,11,14,17,19,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,54,82,86,88,94,96,],[20,20,20,20,20,20,20,20,63,20,20,20,20,20,20,71,20,20,20,20,20,20,20,20,81,20,20,20,20,20,20,20,20,20,20,]),'index':([5,48,53,58,59,60,61,62,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,83,84,89,90,91,100,101,105,106,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'in_tuple':([7,96,],[50,50,]),'in_list':([14,82,],[57,57,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> block","S'",1,None,None,None),
  ('block -> LCURLY statement_list RCURLY','block',3,'p_block','sbml_HW4_regrade.py',451),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','sbml_HW4_regrade.py',458),
  ('statement_list -> statement','statement_list',1,'p_statement_list_val','sbml_HW4_regrade.py',464),
  ('statement -> expression SEMI','statement',2,'p_statement','sbml_HW4_regrade.py',469),
  ('statement -> IF LPAREN expression RPAREN block','statement',5,'p_if_statement','sbml_HW4_regrade.py',474),
  ('statement -> IF LPAREN expression RPAREN block ELSE block','statement',7,'p_if_else_statement','sbml_HW4_regrade.py',480),
  ('statement -> WHILE LPAREN expression RPAREN block','statement',5,'p_while_statement','sbml_HW4_regrade.py',485),
  ('statement -> expression EQUALS expression SEMI','statement',4,'p_assignment','sbml_HW4_regrade.py',490),
  ('expression -> VAR','expression',1,'p_variable','sbml_HW4_regrade.py',498),
  ('statement -> PRINT LPAREN expression RPAREN SEMI','statement',5,'p_print_statement','sbml_HW4_regrade.py',508),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','sbml_HW4_regrade.py',514),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','sbml_HW4_regrade.py',521),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','sbml_HW4_regrade.py',522),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','sbml_HW4_regrade.py',523),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','sbml_HW4_regrade.py',524),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','sbml_HW4_regrade.py',525),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','sbml_HW4_regrade.py',526),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','sbml_HW4_regrade.py',527),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','sbml_HW4_regrade.py',532),
  ('expression -> factor','expression',1,'p_expression_factor','sbml_HW4_regrade.py',537),
  ('expression -> term','expression',1,'p_expression_term','sbml_HW4_regrade.py',542),
  ('term -> NUMBER','term',1,'p_term_number','sbml_HW4_regrade.py',547),
  ('expression -> factor PLUS expression','expression',3,'p_expression_concat','sbml_HW4_regrade.py',553),
  ('factor -> STRING','factor',1,'p_factor_string','sbml_HW4_regrade.py',558),
  ('expression -> factor LBRACKET NUMBER RBRACKET','expression',4,'p_string_index','sbml_HW4_regrade.py',563),
  ('expression -> expression IN expression','expression',3,'p_string_in','sbml_HW4_regrade.py',568),
  ('expression -> expression LT expression','expression',3,'p_expression_compare','sbml_HW4_regrade.py',576),
  ('expression -> expression LE expression','expression',3,'p_expression_compare','sbml_HW4_regrade.py',577),
  ('expression -> expression GT expression','expression',3,'p_expression_compare','sbml_HW4_regrade.py',578),
  ('expression -> expression GE expression','expression',3,'p_expression_compare','sbml_HW4_regrade.py',579),
  ('expression -> expression EQ expression','expression',3,'p_expression_compare','sbml_HW4_regrade.py',580),
  ('expression -> expression NE expression','expression',3,'p_expression_compare','sbml_HW4_regrade.py',581),
  ('expression -> boolean','expression',1,'p_expression_boolean','sbml_HW4_regrade.py',587),
  ('boolean -> TRUE','boolean',1,'p_boolean_true','sbml_HW4_regrade.py',592),
  ('boolean -> FALSE','boolean',1,'p_boolean_false','sbml_HW4_regrade.py',597),
  ('expression -> expression OR expression','expression',3,'p_expression_booleanop','sbml_HW4_regrade.py',602),
  ('expression -> expression AND expression','expression',3,'p_expression_booleanop','sbml_HW4_regrade.py',603),
  ('expression -> NOT expression','expression',2,'p_expression_booleannot','sbml_HW4_regrade.py',608),
  ('expression -> tuple','expression',1,'p_expression_tuple','sbml_HW4_regrade.py',614),
  ('tuple -> LPAREN in_tuple RPAREN','tuple',3,'p_tuple','sbml_HW4_regrade.py',619),
  ('expression -> LPAREN RPAREN','expression',2,'p_emptytuple','sbml_HW4_regrade.py',624),
  ('in_tuple -> in_tuple COMMA expression','in_tuple',3,'p_in_tuple','sbml_HW4_regrade.py',629),
  ('in_tuple -> expression COMMA expression','in_tuple',3,'p_in_tuple2','sbml_HW4_regrade.py',634),
  ('expression -> POUND expression tuple','expression',3,'p_tuple_arg','sbml_HW4_regrade.py',639),
  ('expression -> list','expression',1,'p_list','sbml_HW4_regrade.py',645),
  ('list -> LBRACKET in_list RBRACKET','list',3,'p_expression_list','sbml_HW4_regrade.py',650),
  ('expression -> LBRACKET RBRACKET','expression',2,'p_emptylist','sbml_HW4_regrade.py',655),
  ('in_list -> expression','in_list',1,'p_in_list','sbml_HW4_regrade.py',660),
  ('in_list -> in_list COMMA expression','in_list',3,'p_in_list2','sbml_HW4_regrade.py',665),
  ('expression -> expression PLUS list','expression',3,'p_concat_list','sbml_HW4_regrade.py',670),
  ('index -> LBRACKET expression RBRACKET','index',3,'p_index','sbml_HW4_regrade.py',675),
  ('list -> expression index','list',2,'p_list_index','sbml_HW4_regrade.py',680),
  ('expression -> expression CONS list','expression',3,'p_list_cons','sbml_HW4_regrade.py',684),
  ('expression -> expression IN list','expression',3,'p_list_in','sbml_HW4_regrade.py',690),
]
